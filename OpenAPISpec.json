{
  "swagger": "2.0",
  "info": {
    "description": "Public API.",
    "version": "V1",
    "title": "FxLabs REST API",
    "termsOfService": "Terms of service",
    "contact": {
      "name": "founders",
      "url": "www.fxlabs.io",
      "email": "founders@fxlabs.io"
    },
    "license": {}
  },
  "host": "13.57.51.56",
  "basePath": "/",
  "tags": [
    {
      "name": "account-controller",
      "description": "Account Controller"
    },
    {
      "name": "alert-controller",
      "description": "Alert Controller"
    },
    {
      "name": "cluster-controller",
      "description": "Cluster Controller"
    },
    {
      "name": "dashboard-controller",
      "description": "Dashboard Controller"
    },
    {
      "name": "data-record-controller",
      "description": "Data Record Controller"
    },
    {
      "name": "data-set-controller",
      "description": "Data Set Controller"
    },
    {
      "name": "environment-controller",
      "description": "Environment Controller"
    },
    {
      "name": "issue-tracker-controller",
      "description": "Issue Tracker Controller"
    },
    {
      "name": "job-controller",
      "description": "Job Controller"
    },
    {
      "name": "notification-controller",
      "description": "Notification Controller"
    },
    {
      "name": "org-controller",
      "description": "Org Controller"
    },
    {
      "name": "project-controller",
      "description": "Project Controller"
    },
    {
      "name": "run-controller",
      "description": "Run Controller"
    },
    {
      "name": "skills-controller",
      "description": "Skills Controller"
    },
    {
      "name": "system-setting-controller",
      "description": "System Setting Controller"
    },
    {
      "name": "test-suite-controller",
      "description": "Test Suite Controller"
    },
    {
      "name": "users-controller",
      "description": "Users Controller"
    },
    {
      "name": "vault-controller",
      "description": "Vault Controller"
    }
  ],
  "paths": {
    "/api/v1/accounts": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Account»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "account-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Account»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/accounts/account-type/{accountType}": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "findByAccountType",
        "operationId": "findByAccountTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountType",
            "in": "path",
            "description": "accountType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Account»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/accounts/batch": {
      "post": {
        "tags": [
          "account-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Account»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/accounts/{id}": {
      "get": {
        "tags": [
          "account-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Account»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "account-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Account"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Account»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "account-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Account»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/alerts": {
      "get": {
        "tags": [
          "alert-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Alert»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/alerts/ref/{id}": {
      "get": {
        "tags": [
          "alert-controller"
        ],
        "summary": "findByProjectId",
        "operationId": "findByProjectIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Alert»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/alerts/{id}": {
      "get": {
        "tags": [
          "alert-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Alert»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/bot-clusters": {
      "get": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Cluster»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Cluster»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/bot-clusters/batch": {
      "post": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Cluster"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Cluster»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/bot-clusters/entitled": {
      "get": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "findEntitled",
        "operationId": "findEntitledUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Cluster»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/bot-clusters/superbotnetwork": {
      "get": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "findSuperBotNetwork",
        "operationId": "findSuperBotNetworkUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Cluster»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/bot-clusters/{id}": {
      "get": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Cluster»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Cluster»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Cluster»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/bot-clusters/{id}/ping": {
      "get": {
        "tags": [
          "cluster-controller"
        ],
        "summary": "ping",
        "operationId": "pingUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«string»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/bots/{id}/savings": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "getSavingsById",
        "operationId": "getSavingsByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Saving»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-bytes": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countBytes",
        "operationId": "countBytesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-channels": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countChannels",
        "operationId": "countChannelsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-ebots": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countBots",
        "operationId": "countBotsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-envs": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countEnvs",
        "operationId": "countEnvsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-ibots": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countiBots",
        "operationId": "countiBotsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-jobs": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countJobs",
        "operationId": "countJobsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-projects": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countProjects",
        "operationId": "countProjectsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-runs": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countRuns",
        "operationId": "countRunsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-suites": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countSuites",
        "operationId": "countSuitesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-tests": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countTests",
        "operationId": "countTestsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/count-time": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "countTime",
        "operationId": "countTimeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«long»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/issuetracker/{id}/issuetracker-savings": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "getIssueTrackerSavings",
        "operationId": "getIssueTrackerSavingsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«IssueTrackerSaving»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/projects/{id}/savings": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "getProjectSavings",
        "operationId": "getProjectSavingsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«ProjectSaving»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/dashboard/run/{id}/run-savings": {
      "get": {
        "tags": [
          "dashboard-controller"
        ],
        "summary": "getExecTimeSavings",
        "operationId": "getExecTimeSavingsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«RunSavings»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/data-records": {
      "get": {
        "tags": [
          "data-record-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«DataRecord»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "data-record-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«DataRecord»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "data-record-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataRecord"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«DataRecord»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/data-records/batch": {
      "post": {
        "tags": [
          "data-record-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataRecord"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«DataRecord»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/data-records/{id}": {
      "delete": {
        "tags": [
          "data-record-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«DataRecord»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/data-sets": {
      "get": {
        "tags": [
          "data-set-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«DataSet»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "data-set-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«DataSet»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "data-set-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataSet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«DataSet»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/data-sets/batch": {
      "post": {
        "tags": [
          "data-set-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataSet"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«DataSet»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/data-sets/{id}": {
      "delete": {
        "tags": [
          "data-set-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«DataSet»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/envs": {
      "post": {
        "tags": [
          "environment-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Environment»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "environment-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_4",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Environment»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/envs/batch": {
      "post": {
        "tags": [
          "environment-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Environment"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Environment»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/envs/project-id/{id}": {
      "get": {
        "tags": [
          "environment-controller"
        ],
        "summary": "findByProjectId",
        "operationId": "findByProjectIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Environment»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/envs/{id}": {
      "get": {
        "tags": [
          "environment-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Environment»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "environment-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Environment»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/issue-trackers": {
      "get": {
        "tags": [
          "issue-tracker-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«IssueTracker»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/issue-trackers/issue-tracker-bot": {
      "post": {
        "tags": [
          "issue-tracker-controller"
        ],
        "summary": "addIssueTrackerBot",
        "operationId": "addIssueTrackerBotUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTracker"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«IssueTracker»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/issue-trackers/issue-tracker-bot/{id}": {
      "delete": {
        "tags": [
          "issue-tracker-controller"
        ],
        "summary": "deleteIssueTrackerBot",
        "operationId": "deleteIssueTrackerBotUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«IssueTracker»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/issue-trackers/skill-type/{type}": {
      "get": {
        "tags": [
          "issue-tracker-controller"
        ],
        "summary": "findByType",
        "operationId": "findByTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«IssueTracker»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/issue-trackers/{id}": {
      "get": {
        "tags": [
          "issue-tracker-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«IssueTracker»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "issue-tracker-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_5",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IssueTracker"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«IssueTracker»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/jobs": {
      "get": {
        "tags": [
          "job-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Job»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "job-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Job»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "job-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_6",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Job"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Job»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/jobs/batch": {
      "post": {
        "tags": [
          "job-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Job"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Job»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/jobs/project-id/{id}": {
      "get": {
        "tags": [
          "job-controller"
        ],
        "summary": "findByProjectId",
        "operationId": "findByProjectIdUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Job»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/jobs/{id}": {
      "get": {
        "tags": [
          "job-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Job»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "job-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_5",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Job»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/notifications": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Notification»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "notification-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Notification»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/notifications/batch": {
      "post": {
        "tags": [
          "notification-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Notification"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Notification»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/notifications/{id}": {
      "get": {
        "tags": [
          "notification-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Notification»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "notification-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_7",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Notification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Notification»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "notification-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_6",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Notification»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/orgs": {
      "get": {
        "tags": [
          "org-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Org»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "org-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_14",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Org"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Org»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/orgs/by-user": {
      "get": {
        "tags": [
          "org-controller"
        ],
        "summary": "findOrgUsers",
        "operationId": "findOrgUsersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«OrgUsers»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/orgs/find-by-name/{name}": {
      "get": {
        "tags": [
          "org-controller"
        ],
        "summary": "findByName",
        "operationId": "findByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«OrgUsers»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/orgs/login-status": {
      "get": {
        "tags": [
          "org-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«OrgUsers»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/orgs/{id}": {
      "get": {
        "tags": [
          "org-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Org»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "org-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_8",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Org"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Org»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "org-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_7",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Org»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/orgs/{id}/users": {
      "get": {
        "tags": [
          "org-controller"
        ],
        "summary": "findOrgUsersById",
        "operationId": "findOrgUsersByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«OrgUsers»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/orgs/{orgId}/org-user/{orgUserId}": {
      "get": {
        "tags": [
          "org-controller"
        ],
        "summary": "findOrgUserById",
        "operationId": "findOrgUserByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "orgId",
            "required": true,
            "type": "string"
          },
          {
            "name": "orgUserId",
            "in": "path",
            "description": "orgUserId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«OrgUsers»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/orgs/{orgId}/users/add-member": {
      "post": {
        "tags": [
          "org-controller"
        ],
        "summary": "findOrgUsersById",
        "operationId": "findOrgUsersByIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "orgId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "member",
            "description": "member",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Member"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/orgs/{orgId}/users/{userId}": {
      "put": {
        "tags": [
          "org-controller"
        ],
        "summary": "updateOrgUser",
        "operationId": "updateOrgUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "orgId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgUsers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/orgs/{orgId}/users/{userId}/reset-password": {
      "post": {
        "tags": [
          "org-controller"
        ],
        "summary": "resetPassword",
        "operationId": "resetPasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "orgId",
            "in": "path",
            "description": "orgId",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "member",
            "description": "member",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Member"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Project»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "project-controller"
        ],
        "summary": "add",
        "operationId": "addUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Project»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "project-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_9",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Project»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/find-by-name/{org}/{name}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "findByProjectName",
        "operationId": "findByProjectNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "org",
            "in": "path",
            "description": "org",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Project»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/name/{name}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "findByName",
        "operationId": "findByNameUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Project»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Project»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "project-controller"
        ],
        "summary": "save",
        "operationId": "saveUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Project"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Project»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "project-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_8",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Project»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/projects/{id}/project-checksums": {
      "get": {
        "tags": [
          "project-controller"
        ],
        "summary": "findByProjectId",
        "operationId": "findByProjectIdUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«ProjectFile»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/projects/{id}/project-imports": {
      "post": {
        "tags": [
          "project-controller"
        ],
        "summary": "saveImports",
        "operationId": "saveImportsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectImports"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/runs/job/{id}": {
      "get": {
        "tags": [
          "run-controller"
        ],
        "summary": "findByJobId",
        "operationId": "findByJobIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Run»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "run-controller"
        ],
        "summary": "run",
        "operationId": "runUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "region",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "tags",
            "required": false,
            "type": "string"
          },
          {
            "name": "env",
            "in": "query",
            "description": "env",
            "required": false,
            "type": "string"
          },
          {
            "name": "suites",
            "in": "query",
            "description": "suites",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Run»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/runs/{id}": {
      "get": {
        "tags": [
          "run-controller"
        ],
        "summary": "findByRunId",
        "operationId": "findByRunIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Run»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/runs/{id}/test-suite-response/{name}": {
      "get": {
        "tags": [
          "run-controller"
        ],
        "summary": "findBySuiteId",
        "operationId": "findBySuiteIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 1000,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«TestSuiteResponse»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/runs/{id}/test-suite-responses": {
      "get": {
        "tags": [
          "run-controller"
        ],
        "summary": "findResponsesByRunId",
        "operationId": "findResponsesByRunIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«TestSuiteResponse»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/runs/{id}/test-suite-summary": {
      "get": {
        "tags": [
          "run-controller"
        ],
        "summary": "findStatusByRunId",
        "operationId": "findStatusByRunIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 1000,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Suite»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/runs/{jobId}/testSuite/test-suite-responses/{name}": {
      "get": {
        "tags": [
          "run-controller"
        ],
        "summary": "findResponsesByTestSuite",
        "operationId": "findResponsesByTestSuiteUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "description": "jobId",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«TestSuiteResponse»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/skills": {
      "get": {
        "tags": [
          "skills-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_10",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Skill»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "skills-controller"
        ],
        "summary": "add",
        "operationId": "addUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Skill»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "skills-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_10",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Skill"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Skill»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/skills/type/{type}": {
      "get": {
        "tags": [
          "skills-controller"
        ],
        "summary": "findByType",
        "operationId": "findByTypeUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type",
            "required": true,
            "type": "string",
            "enum": [
              "VERSION_CONTROL",
              "BOT_DEPLOYMENT",
              "ISSUE_TRACKER",
              "NOTIFICATION",
              "ANALYTICS"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Skill»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/skills/{id}": {
      "get": {
        "tags": [
          "skills-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Skill»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "skills-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_9",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Skill»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/system-settings": {
      "get": {
        "tags": [
          "system-setting-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_11",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 100,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«SystemSetting»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "system-setting-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_11",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SystemSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«SystemSetting»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/system-settings/{id}": {
      "get": {
        "tags": [
          "system-setting-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_10",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«SystemSetting»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/test-suites": {
      "get": {
        "tags": [
          "test-suite-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_13",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«TestSuite»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "test-suite-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_16",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSuite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«TestSuite»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "test-suite-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_12",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestSuite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«TestSuite»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/test-suites/batch": {
      "post": {
        "tags": [
          "test-suite-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_15",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dtos",
            "description": "dtos",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TestSuite"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«TestSuite»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/test-suites/search/{keyword}": {
      "get": {
        "tags": [
          "test-suite-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_12",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "keyword",
            "in": "path",
            "description": "keyword",
            "required": true,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«TestSuite»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/test-suites/{id}": {
      "get": {
        "tags": [
          "test-suite-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_11",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«TestSuite»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "test-suite-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_10",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«TestSuite»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/api/v1/users": {
      "get": {
        "tags": [
          "users-controller"
        ],
        "summary": "findUsers",
        "operationId": "findUsersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Users»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "users-controller"
        ],
        "summary": "upgrade",
        "operationId": "upgradeUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "createdDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "modifiedBy",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "modifiedDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "inactive",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "PERSONAL",
              "TEAM",
              "ENTERPRISE"
            ]
          },
          {
            "name": "billingEmail",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "company",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orgPlan",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FREE",
              "PRO",
              "TEAM",
              "BASIC",
              "BUSINESS",
              "ENTERPRISE",
              "PAY_AS_YOU_GO"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Users»»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users/enterprise-sign-up": {
      "post": {
        "tags": [
          "users-controller"
        ],
        "summary": "enterpriseSignUp",
        "operationId": "enterpriseSignUpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "users",
            "description": "users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users/org-add": {
      "post": {
        "tags": [
          "users-controller"
        ],
        "summary": "addToOrg",
        "operationId": "addToOrgUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "orgUsers",
            "description": "orgUsers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgUsers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users/org-remove": {
      "post": {
        "tags": [
          "users-controller"
        ],
        "summary": "removeFromOrg",
        "operationId": "removeFromOrgUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "orgUsers",
            "description": "orgUsers",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OrgUsers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users/personal-sign-up": {
      "post": {
        "tags": [
          "users-controller"
        ],
        "summary": "personalSignUp",
        "operationId": "personalSignUpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "users",
            "description": "users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users/status": {
      "get": {
        "tags": [
          "users-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Users»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/users/team-sign-up": {
      "post": {
        "tags": [
          "users-controller"
        ],
        "summary": "teamSignUp",
        "operationId": "teamSignUpUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "users",
            "description": "users",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Users"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«boolean»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/vault": {
      "get": {
        "tags": [
          "vault-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET_14",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«List«Vault»»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "vault-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST_17",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Vault»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/api/v1/vault/{id}": {
      "get": {
        "tags": [
          "vault-controller"
        ],
        "summary": "findById",
        "operationId": "findByIdUsingGET_12",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Vault»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "vault-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_13",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dto",
            "description": "dto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Vault"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Vault»"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "vault-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_11",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response«Vault»"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "AWS",
            "BitBucket",
            "GitHub",
            "Git",
            "GitLab",
            "Self_Hosted",
            "Microsoft_TFS_Git",
            "Microsoft_VSTS_Git",
            "Slack",
            "Email",
            "Local",
            "Jira"
          ]
        },
        "allowedRegions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "prop1": {
          "type": "string"
        },
        "prop2": {
          "type": "string"
        },
        "prop3": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Account"
    },
    "Alert": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "healedDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "readDate": {
          "type": "string",
          "format": "date-time"
        },
        "refId": {
          "type": "string"
        },
        "refName": {
          "type": "string"
        },
        "refType": {
          "type": "string",
          "enum": [
            "PROJECT",
            "JOB",
            "RUN",
            "TEST_SUITE",
            "JOB_SUMMARY",
            "ORG",
            "USER"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "UNREAD",
            "READ",
            "EMAILED"
          ]
        },
        "subject": {
          "type": "string"
        },
        "taskState": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "HEALED"
          ]
        },
        "taskType": {
          "type": "string",
          "enum": [
            "PROJECT_SYNC",
            "JOB_VALIDATION",
            "JOB_EXECUTION",
            "TEST_EXECUTION",
            "TEST_RESULT_DEVIATION"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARNING",
            "INFO",
            "SUMMARY",
            "SUCCESS"
          ]
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Alert"
    },
    "Auth": {
      "type": "object",
      "properties": {
        "accessTokenUri": {
          "type": "string"
        },
        "authType": {
          "type": "string",
          "enum": [
            "Basic",
            "BASIC",
            "BasicAuth",
            "OAuth_2_0",
            "Token"
          ]
        },
        "authorizationScheme": {
          "type": "string",
          "enum": [
            "form",
            "header",
            "none",
            "query"
          ]
        },
        "clientAuthenticationScheme": {
          "type": "string",
          "enum": [
            "form",
            "header",
            "none",
            "query"
          ]
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "grantType": {
          "type": "string",
          "enum": [
            "authorization_code",
            "implicit",
            "client_credentials",
            "password"
          ]
        },
        "header_1": {
          "type": "string"
        },
        "header_2": {
          "type": "string"
        },
        "header_3": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "preEstablishedRedirectUri": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "tokenName": {
          "type": "string"
        },
        "useCurrentUri": {
          "type": "boolean"
        },
        "userAuthorizationUri": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "Auth"
    },
    "Cluster": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/Account"
        },
        "cloudType": {
          "type": "string",
          "enum": [
            "AWS",
            "DIGITAL_OCEAN",
            "GCP",
            "AZURE",
            "PRIVATE_CLOUD",
            "VMWARE",
            "OPENSTACK",
            "OTHER"
          ]
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "driver": {
          "type": "string",
          "enum": [
            "MANUAL",
            "KUBERNETES"
          ]
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "live": {
          "type": "integer",
          "format": "int32"
        },
        "manual": {
          "type": "boolean"
        },
        "manualScript": {
          "type": "string"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "nodeId": {
          "type": "string"
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "region": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE",
            "LAUNCHING",
            "FAILED",
            "DELETING",
            "DELETED"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PRIVATE",
            "ORG_PUBLIC",
            "PUBLIC"
          ]
        }
      },
      "title": "Cluster"
    },
    "DataRecord": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "dataSet": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "record": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "DataRecord"
    },
    "DataSet": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "project": {
          "$ref": "#/definitions/ProjectMinimalDto"
        },
        "props": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "DataSet"
    },
    "Environment": {
      "type": "object",
      "properties": {
        "auths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Auth"
          }
        },
        "baseUrl": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "projectId": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Environment"
    },
    "IssueTracker": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/Account"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "opts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Opt"
          }
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "prop1": {
          "type": "string"
        },
        "prop2": {
          "type": "string"
        },
        "prop3": {
          "type": "string"
        },
        "prop4": {
          "type": "string"
        },
        "prop5": {
          "type": "string"
        },
        "skill": {
          "$ref": "#/definitions/NameDto"
        },
        "state": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "LAUNCHING",
            "FAILED",
            "INACTIVE",
            "DELETING",
            "DELETED"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PRIVATE",
            "ORG_PUBLIC"
          ]
        }
      },
      "title": "IssueTracker"
    },
    "IssueTrackerSaving": {
      "type": "object",
      "properties": {
        "hourlyBugRate": {
          "type": "integer",
          "format": "int32"
        },
        "hourlyBugValidation": {
          "type": "integer",
          "format": "int32"
        },
        "itid": {
          "type": "string"
        },
        "totalCostSaving": {
          "type": "integer",
          "format": "int64"
        },
        "totalHourSaving": {
          "type": "integer",
          "format": "int64"
        },
        "validatedCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "IssueTrackerSaving"
    },
    "Job": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "cron": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "issueTracker": {
          "$ref": "#/definitions/JobIssueTracker"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "nextFire": {
          "type": "string",
          "format": "date-time"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JobNotification"
          }
        },
        "project": {
          "$ref": "#/definitions/ProjectMinimalDto"
        },
        "refId": {
          "type": "string"
        },
        "regions": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Job"
    },
    "JobIssueTracker": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "JobIssueTracker"
    },
    "JobNotification": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "channel": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      },
      "title": "JobNotification"
    },
    "Member": {
      "type": "object",
      "properties": {
        "confirmPassword": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "orgId": {
          "type": "string"
        },
        "orgRole": {
          "type": "string",
          "enum": [
            "READ",
            "WRITE",
            "ADMIN",
            "USER",
            "PROJECT_MANAGER",
            "ENTERPRISE_ADMIN"
          ]
        },
        "password": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Member"
    },
    "Message": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "INFO",
            "ERROR",
            "WARNING"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Message"
    },
    "NameDto": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "NameDto"
    },
    "Notification": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "account": {
          "$ref": "#/definitions/Account"
        },
        "channel": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "secretKey": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "SLACK",
            "EMAIL"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "visibility": {
          "type": "string",
          "enum": [
            "PRIVATE",
            "ORG_PUBLIC",
            "PUBLIC"
          ]
        }
      },
      "title": "Notification"
    },
    "Opt": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "label": {
          "type": "string"
        },
        "mandatory": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Opt"
    },
    "Org": {
      "type": "object",
      "properties": {
        "billingEmail": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "orgPlan": {
          "type": "string",
          "enum": [
            "FREE",
            "PRO",
            "TEAM",
            "BASIC",
            "BUSINESS",
            "ENTERPRISE",
            "PAY_AS_YOU_GO"
          ]
        },
        "orgType": {
          "type": "string",
          "enum": [
            "PERSONAL",
            "TEAM",
            "ENTERPRISE"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Org"
    },
    "OrgUsers": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "orgRole": {
          "type": "string",
          "enum": [
            "READ",
            "WRITE",
            "ADMIN",
            "USER",
            "PROJECT_MANAGER",
            "ENTERPRISE_ADMIN"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "INVITED",
            "ACTIVE",
            "INACTIVE",
            "DECLINED",
            "REMOVED"
          ]
        },
        "users": {
          "$ref": "#/definitions/UserMinimalDto"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "OrgUsers"
    },
    "Policies": {
      "type": "object",
      "properties": {
        "cleanupExec": {
          "type": "string"
        },
        "initExec": {
          "type": "string"
        },
        "logger": {
          "type": "string"
        },
        "repeat": {
          "type": "integer",
          "format": "int32"
        },
        "repeatDelay": {
          "type": "integer",
          "format": "int64"
        },
        "repeatModule": {
          "type": "string"
        },
        "repeatOnFailure": {
          "type": "integer",
          "format": "int32"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Policies"
    },
    "Project": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/Account"
        },
        "autoGenSuites": {
          "type": "integer",
          "format": "int32"
        },
        "branch": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "genPolicy": {
          "type": "string",
          "enum": [
            "None",
            "Create"
          ]
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "lastCommit": {
          "type": "string"
        },
        "lastSync": {
          "type": "string",
          "format": "date-time"
        },
        "licenses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "openAPISpec": {
          "type": "string"
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "props": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "url": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Project"
    },
    "ProjectFile": {
      "type": "object",
      "properties": {
        "checksum": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "filename": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modified": {
          "type": "string",
          "format": "date-time"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "projectId": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ProjectFile"
    },
    "ProjectImports": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "imports": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "projectId": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ProjectImports"
    },
    "ProjectMinimalDto": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ProjectMinimalDto"
    },
    "ProjectSaving": {
      "type": "object",
      "properties": {
        "autoGenAllSuites": {
          "type": "integer",
          "format": "int32"
        },
        "autoGenSecuritySuites": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "securityCoverageCostSaving": {
          "type": "integer",
          "format": "int64"
        },
        "securityCoverageTimeSaving": {
          "type": "integer",
          "format": "int64"
        },
        "totalCostSaving": {
          "type": "integer",
          "format": "int64"
        },
        "totalTimeSaving": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ProjectSaving"
    },
    "Response«Account»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Account"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Account»"
    },
    "Response«Alert»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Alert"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Alert»"
    },
    "Response«Cluster»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Cluster"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Cluster»"
    },
    "Response«DataRecord»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DataRecord"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«DataRecord»"
    },
    "Response«DataSet»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/DataSet"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«DataSet»"
    },
    "Response«Environment»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Environment"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Environment»"
    },
    "Response«IssueTrackerSaving»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/IssueTrackerSaving"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«IssueTrackerSaving»"
    },
    "Response«IssueTracker»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/IssueTracker"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«IssueTracker»"
    },
    "Response«Job»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Job"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Job»"
    },
    "Response«List«Account»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Account"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Account»»"
    },
    "Response«List«Alert»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Alert»»"
    },
    "Response«List«Cluster»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Cluster"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Cluster»»"
    },
    "Response«List«DataRecord»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataRecord"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«DataRecord»»"
    },
    "Response«List«DataSet»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataSet"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«DataSet»»"
    },
    "Response«List«Environment»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Environment"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Environment»»"
    },
    "Response«List«IssueTracker»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IssueTracker"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«IssueTracker»»"
    },
    "Response«List«Job»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Job"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Job»»"
    },
    "Response«List«Notification»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Notification"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Notification»»"
    },
    "Response«List«OrgUsers»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrgUsers"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«OrgUsers»»"
    },
    "Response«List«Org»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Org"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Org»»"
    },
    "Response«List«ProjectFile»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectFile"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«ProjectFile»»"
    },
    "Response«List«Project»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Project"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Project»»"
    },
    "Response«List«Run»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Run"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Run»»"
    },
    "Response«List«Skill»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Skill"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Skill»»"
    },
    "Response«List«Suite»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Suite"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Suite»»"
    },
    "Response«List«SystemSetting»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SystemSetting"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«SystemSetting»»"
    },
    "Response«List«TestSuiteResponse»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestSuiteResponse"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«TestSuiteResponse»»"
    },
    "Response«List«TestSuite»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestSuite"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«TestSuite»»"
    },
    "Response«List«Users»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Users"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Users»»"
    },
    "Response«List«Vault»»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Vault"
          }
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«List«Vault»»"
    },
    "Response«Notification»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Notification"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Notification»"
    },
    "Response«OrgUsers»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/OrgUsers"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«OrgUsers»"
    },
    "Response«Org»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Org"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Org»"
    },
    "Response«ProjectSaving»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/ProjectSaving"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«ProjectSaving»"
    },
    "Response«Project»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Project"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Project»"
    },
    "Response«RunSavings»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/RunSavings"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«RunSavings»"
    },
    "Response«Run»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Run"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Run»"
    },
    "Response«Saving»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Saving"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Saving»"
    },
    "Response«Skill»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Skill"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Skill»"
    },
    "Response«SystemSetting»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/SystemSetting"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«SystemSetting»"
    },
    "Response«TestSuite»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/TestSuite"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«TestSuite»"
    },
    "Response«Users»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Users"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Users»"
    },
    "Response«Vault»": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Vault"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«Vault»"
    },
    "Response«boolean»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "boolean"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«boolean»"
    },
    "Response«long»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "integer",
          "format": "int64"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«long»"
    },
    "Response«string»": {
      "type": "object",
      "properties": {
        "data": {
          "type": "string"
        },
        "errors": {
          "type": "boolean"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          }
        },
        "requestId": {
          "type": "string"
        },
        "requestTime": {
          "type": "string",
          "format": "date-time"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Response«string»"
    },
    "Run": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "job": {
          "$ref": "#/definitions/Job"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "regions": {
          "type": "string"
        },
        "runId": {
          "type": "integer",
          "format": "int64"
        },
        "stats": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int64"
          }
        },
        "task": {
          "$ref": "#/definitions/RunTask"
        },
        "validations": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Run"
    },
    "RunSavings": {
      "type": "object",
      "properties": {
        "costSaved": {
          "type": "integer",
          "format": "int64"
        },
        "job": {
          "$ref": "#/definitions/Job"
        },
        "runId": {
          "type": "integer",
          "format": "int64"
        },
        "timeSaved": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "RunSavings"
    },
    "RunTask": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "failedTests": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "skippedTests": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "WAITING",
            "PROCESSING",
            "COMPLETED",
            "FAIL",
            "TIMEOUT"
          ]
        },
        "timeSaved": {
          "type": "integer",
          "format": "int64"
        },
        "timeTaken": {
          "type": "integer",
          "format": "int64"
        },
        "totalBytes": {
          "type": "integer",
          "format": "int64"
        },
        "totalSuiteCompleted": {
          "type": "integer",
          "format": "int64"
        },
        "totalTestCompleted": {
          "type": "integer",
          "format": "int64"
        },
        "totalTests": {
          "type": "integer",
          "format": "int64"
        },
        "totalTime": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "RunTask"
    },
    "Saving": {
      "type": "object",
      "properties": {
        "calMonths": {
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "licenseSaving": {
          "type": "integer",
          "format": "int32"
        },
        "managedInstanceSaving": {
          "type": "integer",
          "format": "int32"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "startDate": {
          "type": "string",
          "format": "date-time"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Saving"
    },
    "Skill": {
      "type": "object",
      "properties": {
        "accessKey": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "opts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Opt"
          }
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "prop1": {
          "type": "string"
        },
        "prop2": {
          "type": "string"
        },
        "prop3": {
          "type": "string"
        },
        "prop4": {
          "type": "string"
        },
        "prop5": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "skillType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "BOT_DEPLOYMENT",
            "ISSUE_TRACKER",
            "NOTIFICATION",
            "ANALYTICS"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Skill"
    },
    "Suite": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "Bug",
            "Use_Case",
            "Functional",
            "Positive",
            "Negative",
            "Weak_Password",
            "Security_UnSecured",
            "Security_DDOS",
            "Security_XSS",
            "Security_SQL_Injection"
          ]
        },
        "failed": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "runId": {
          "type": "string"
        },
        "severity": {
          "type": "string",
          "enum": [
            "Critical",
            "Major",
            "Minor",
            "Trivial"
          ]
        },
        "size": {
          "type": "integer",
          "format": "int64"
        },
        "suiteName": {
          "type": "string"
        },
        "tests": {
          "type": "integer",
          "format": "int64"
        },
        "time": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Suite"
    },
    "SystemSetting": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "value": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SystemSetting"
    },
    "TestCase": {
      "type": "object",
      "properties": {
        "body": {
          "type": "string"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "inactive": {
          "type": "boolean"
        }
      },
      "title": "TestCase"
    },
    "TestSuite": {
      "type": "object",
      "properties": {
        "assertions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auth": {
          "type": "string"
        },
        "authors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "category": {
          "type": "string",
          "enum": [
            "Bug",
            "Use_Case",
            "Functional",
            "Positive",
            "Negative",
            "Weak_Password",
            "Security_UnSecured",
            "Security_DDOS",
            "Security_XSS",
            "Security_SQL_Injection"
          ]
        },
        "cleanup": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "headers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "init": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "method": {
          "type": "string",
          "enum": [
            "GET",
            "HEAD",
            "POST",
            "PUT",
            "PATCH",
            "DELETE",
            "OPTIONS",
            "TRACE"
          ]
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "policies": {
          "$ref": "#/definitions/Policies"
        },
        "project": {
          "$ref": "#/definitions/ProjectMinimalDto"
        },
        "props": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "publishToMarketplace": {
          "type": "boolean"
        },
        "severity": {
          "type": "string",
          "enum": [
            "Critical",
            "Major",
            "Minor",
            "Trivial"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "testCases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TestCase"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "Suite",
            "Abstract",
            "Dataset",
            "Consulting_Services",
            "AI_Skills"
          ]
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "TestSuite"
    },
    "TestSuiteResponse": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "logs": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "region": {
          "type": "string"
        },
        "requestEndTime": {
          "type": "string",
          "format": "date-time"
        },
        "requestStartTime": {
          "type": "string",
          "format": "date-time"
        },
        "requestTime": {
          "type": "integer",
          "format": "int64"
        },
        "response": {
          "type": "string"
        },
        "runId": {
          "type": "string"
        },
        "runNo": {
          "type": "integer",
          "format": "int64"
        },
        "severity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "testSuite": {
          "type": "string"
        },
        "tests": {
          "type": "integer",
          "format": "int32"
        },
        "totalBytes": {
          "type": "integer",
          "format": "int64"
        },
        "totalFailed": {
          "type": "integer",
          "format": "int64"
        },
        "totalPassed": {
          "type": "integer",
          "format": "int64"
        },
        "totalSkipped": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "TestSuiteResponse"
    },
    "UserMinimalDto": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "jobTitle": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "UserMinimalDto"
    },
    "Users": {
      "type": "object",
      "properties": {
        "accountNonExpired": {
          "type": "boolean"
        },
        "accountNonLocked": {
          "type": "boolean"
        },
        "company": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "credentialsNonExpired": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "jobTitle": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Users"
    },
    "Vault": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inactive": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "modifiedBy": {
          "type": "string"
        },
        "modifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "org": {
          "$ref": "#/definitions/NameDto"
        },
        "val": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Vault"
    }
  }
}
